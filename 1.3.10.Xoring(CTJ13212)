package q13212;

import java.util.*;

public class CTJ13212 {

    public static int maxSubset(int[] a, int n) {
        int idx = 0;

        for (int i = 31; i >= 0; i--) {
            int maxIdx = idx;
            int maxElement = Integer.MIN_VALUE;

            for (int j = idx; j < n; j++) {
                if ((a[j] & (1 << i)) != 0 && a[j] > maxElement) {
                    maxElement = a[j];
                    maxIdx = j;
                }
            }

            if (maxElement == Integer.MIN_VALUE) {
                continue;
            }

            int temp = a[idx];
            a[idx] = a[maxIdx];
            a[maxIdx] = temp;

            for (int j = 0; j < n; j++) {
                if (j != maxIdx && (a[j] & (1 << i)) != 0) {
                    a[j] ^= a[maxIdx];
                }
            }

            idx++;
        }

        int result = 0;
        for (int i = 0; i < n; i++) {
            result ^= a[i];
        }

        return result;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] a = new int[n];

        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int xor = maxSubset(a, n);

        System.out.println(xor);
    }
}
